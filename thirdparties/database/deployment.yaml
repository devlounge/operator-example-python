apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: postgres
  namespace: postgres
  labels:
    app: postgres
    operator: postgres
spec:
  template:
    metadata:
      labels:
        app: postgres
        operator: postgres
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "remove-lost-found",
                "image": "busybox:1.25.0",
                "imagePullPolicy": {{ default "IfNotPresent" .Values.imagePullPolicy | quote }},
                "command": ["rm", "-fr", "/var/lib/postgresql/data/pgdata/lost+found"],
                "volumeMounts": [
                    {
                        "name": "data",
                        "mountPath": "/var/lib/postgresql/data/pgdata"
                    }
                ]
            }
        ]'
    spec:
      containers:
      - name: postgres
        image: postgres:9.6-alpine
        imagePullPolicy: IfNotPresent
        env:
        # - name: POSTGRES_USER
        #   value: {{ default "postgres" .Values.postgresUser | quote }}
        #   # Required for pg_isready in the health probes.
        # - name: PGUSER
        #   value: {{ default "postgres" .Values.postgresUser | quote }}
        # - name: POSTGRES_DB
        #   value: {{ default "" .Values.postgresDatabase | quote }}
        # - name: PGDATA
        #   value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: postgres-password
        ports:
        - name: postgresql
          containerPort: 5432
        # livenessProbe:
        #   exec:
        #     command:
        #     - pg_isready
        #   initialDelaySeconds: 60
        #   timeoutSeconds: 3
        # readinessProbe:
        #   exec:
        #     command:
        #     - pg_isready
        #   initialDelaySeconds: 60
        #   timeoutSeconds: 3
#         resources:
# {{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: password
          readOnly: true
          mountPath: /etc/postgres-password
# {{- if .Values.metrics.enabled }}
#       - name: metrics
#         image: "{{ .Values.metrics.image }}:{{ .Values.metrics.imageTag }}"
#         imagePullPolicy: {{ default "" .Values.metrics.imagePullPolicy | quote }}
#         env:
#         - name: DATA_SOURCE_NAME
#           value: postgresql://postgres@127.0.0.1:5432?sslmode=disable
#         ports:
#         - name: metrics
#           containerPort: 9187
#         resources:
# {{ toYaml .Values.metrics.resources | indent 10 }}
# {{- end }}
      volumes:
      - name: data
        emptyDir: {}

      - name: password
        secret:
          secretName: password
